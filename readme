body, html {
    margin: 0;
    padding: 0;
    height: 100%;
    font-family: 'Google Sans', Roboto, Arial, sans-serif;
    touch-action: manipulation;
  }
  
  /* Previous CSS remains the same, with these modifications: */
  .email-item {
    display: flex;
    align-items: center;
    padding: 10px;
    border-bottom: 1px solid #f1f3f4;
    cursor: pointer;
    transition: 
      background-color 0.2s ease,
      transform 0.1s ease;
  }
  
  .email-item:hover {
    background-color: #f0f0f0;
  }
  
  .email-item:active {
    background-color: #e6e6e6;
    transform: scale(0.99);
  }
  
  /* Touch effect for mobile */
  @media (max-width: 768px) {
    .email-item {
      padding: 15px 10px;
    }
  }
  
  .email-item.selected {
    background-color: #e6f3ff;
    border-left: 4px solid #1a73e8;
  }
  
  .email-item-content {
    display: grid;
    grid-template-columns: 1fr auto;
    grid-template-areas: 
      "sender time"
      "subject subject"
      "preview preview";
    gap: 5px;
    flex-grow: 1;
    pointer-events: none;
  }
  
  .email-item-avatar {
    transition: 
      transform 0.2s ease,
      background-color 0.2s ease;
    border-radius: 50%;
    padding: 5px;
  }
  
  .email-item:active .email-item-avatar {
    background-color: rgba(0,0,0,0.1);
  }
  
  /* Additional touch-friendly styles */
  button {
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
  }
  
  input, button {
    min-height: 44px; /* Recommended touch target size */
    min-width: 44px;
  }



  
  import React, { useState } from 'react';
  import './GmailClone.css';
  
  function GmailClone() {
    const [isSidebarOpen, setIsSidebarOpen] = useState(true);
    const [selectedEmail, setSelectedEmail] = useState(null);
  
    const folders = [
      { icon: '📥', name: 'Inbox', key: 'inbox' },
      { icon: '⭐', name: 'Starred', key: 'starred' },
      { icon: '⏰', name: 'Snoozed', key: 'snoozed' },
      { icon: '📤', name: 'Sent', key: 'sent' },
      { icon: '📝', name: 'Drafts', key: 'drafts' },
      { icon: '➕', name: 'More', key: 'more' }
    ];
  
    const emails = [
      {
        id: 1,
        avatar: '👨',
        sender: 'John Doe',
        subject: 'Project Update',
        preview: 'Meeting details attached',
        time: '10:30 AM',
        isRead: false,
        body: `
          <p>Dear Team,</p>
          <p>I'm writing to provide an update on our current project. We've made significant progress over the past week and I wanted to share some key details:</p>
          <ul>
            <li>Phase 1 is now 75% complete</li>
            <li>Budget is on track</li>
            <li>Team performance has been exceptional</li>
          </ul>
          <p>Please review the attached documents and let me know if you have any questions.</p>
          <p>Best regards,<br/>John Doe</p>
        `
      },
      {
        id: 2,
        avatar: '👩',
        sender: 'Jane Smith',
        subject: 'Quarterly Report',
        preview: 'Please review the attached report',
        time: '9:45 AM',
        isRead: false,
        body: `
          <p>Hello,</p>
          <p>I've completed the quarterly report for our department. Key highlights include:</p>
          <ul>
            <li>Revenue increased by 22%</li>
            <li>New client acquisitions up by 15%</li>
            <li>Operational costs reduced by 8%</li>
          </ul>
          <p>Attached is the detailed report for your review.</p>
          <p>Regards,<br/>Jane Smith</p>
        `
      },
      {
        id: 3,
        avatar: '👥',
        sender: 'Marketing Team',
        subject: 'Campaign Strategy',
        preview: 'Discussing new marketing initiatives',
        time: '8:15 AM',
        isRead: true,
        body: `
          <p>Team,</p>
          <p>We're excited to share our new marketing campaign strategy. Key points:</p>
          <ul>
            <li>Target audience: Young professionals</li>
            <li>Multichannel approach</li>
            <li>Social media and digital marketing focus</li>
          </ul>
          <p>Looking forward to your input and collaboration.</p>
          <p>Best,<br/>Marketing Team</p>
        `
      },
      {
        id: 4,
        avatar: '🧑‍💻',
        sender: 'HR Department',
        subject: 'Team Building Event',
        preview: 'Invitation to annual team retreat',
        time: 'Yesterday',
        isRead: true,
        body: `
          <p>Dear Colleagues,</p>
          <p>We're planning our annual team building retreat. Details:</p>
          <ul>
            <li>Date: June 15-17</li>
            <li>Location: Mountain Resort</li>
            <li>Activities: Team challenges, workshops, networking</li>
          </ul>
          <p>Please confirm your participation by next week.</p>
          <p>Warmly,<br/>HR Team</p>
        `
      },
      {
        id: 5,
        avatar: '📊',
        sender: 'Finance Team',
        subject: 'Budget Approval',
        preview: 'Next quarter budget needs review',
        time: 'Mar 20',
        isRead: true,
        body: `
          <p>Hello,</p>
          <p>The proposed budget for next quarter requires your review and approval:</p>
          <ul>
            <li>Total budget: $500,000</li>
            <li>Departments: Marketing, R&D, Operations</li>
            <li>Projected savings: 12%</li>
          </ul>
          <p>Please review and provide feedback.</p>
          <p>Regards,<br/>Finance Team</p>
        `
      },
      {
        id: 6,
        avatar: '🌐',
        sender: 'IT Support',
        subject: 'System Maintenance',
        preview: 'Scheduled downtime this weekend',
        time: 'Mar 18',
        isRead: true,
        body: `
          <p>Dear Users,</p>
          <p>We have scheduled system maintenance for this weekend:</p>
          <ul>
            <li>Date: Saturday, March 23</li>
            <li>Time: 2 AM - 6 AM</li>
            <li>Expected downtime: Approximately 4 hours</li>
          </ul>
          <p>Please save all work and log out during this time.</p>
          <p>Thank you,<br/>IT Support Team</p>
        `
      }
    ];
  
    const toggleSidebar = () => {
      setIsSidebarOpen(!isSidebarOpen);
    };
  
    const handleEmailSelect = (email) => {
      setSelectedEmail(email);
    };
  
    const handleBackToInbox = () => {
      setSelectedEmail(null);
    };
  
    return (
      <div className="gmail-container">
        {/* Top Header */}
        <div className="gmail-header">
          <div className="header-left">
            <button 
              className="menu-icon" 
              onClick={toggleSidebar}
            >
              ☰
            </button>
            <img 
              src="https://ssl.gstatic.com/ui/v1/icons/mail/rfn/logo_gmail_lockup_default_1x_r2.png" 
              alt="Gmail Logo" 
              className="gmail-logo" 
            />
          </div>
          <div className="header-search">
            <input 
              type="text" 
              placeholder="Search mail" 
              className="search-input" 
            />
          </div>
          <div className="header-right">
            <button>🔧</button>
            <button>❓</button>
            <button>🔘</button>
          </div>
        </div>
  
        {/* Main Content Area */}
        <div className="gmail-main">
          {/* Sliding Sidebar */}
          <div className={`sliding-sidebar ${isSidebarOpen ? 'open' : ''}`}>
            <div className="sidebar-header">
              <button 
                className="sidebar-close-btn" 
                onClick={toggleSidebar}
              >
                {isSidebarOpen ? '←' : '→'}
              </button>
            </div>
  
            <button 
              className="compose-btn" 
              onClick={() => {/* Add compose logic */}}
            >
              ➕ Compose
            </button>
  
            {folders.map((folder) => (
              <div 
                key={folder.key}
                className="sidebar-item"
              >
                <span className="folder-icon">{folder.icon}</span>
                <span className="folder-name">{folder.name}</span>
                {folder.key === 'inbox' && <span className="inbox-count">{emails.filter(email => !email.isRead).length}</span>}
              </div>
            ))}
          </div>
  
          {/* Email List or Email View */}
          {!selectedEmail ? (
            <div className={`email-list ${isSidebarOpen ? '' : 'expanded'}`}>
              <div className="email-list-controls">
                <input type="checkbox" />
                <button>🔄</button>
                <button>▼</button>
              </div>
              <div className="email-items">
                {emails.map((email) => (
                  <div 
                    key={email.id} 
                    className="email-item"
                    onClick={() => handleEmailSelect(email)}
                  >
                    <input type="checkbox" />
                    <div className="email-item-avatar">
                      {email.avatar}
                    </div>
                    <div className="email-item-content">
                      <span className="email-sender">{email.sender}</span>
                      <span className="email-subject">{email.subject}</span>
                      <span className="email-preview">{email.preview}</span>
                      <span className="email-time">{email.time}</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ) : (
            <div className="email-view-full">
              <div className="email-view-header">
                <button 
                  className="back-to-inbox" 
                  onClick={handleBackToInbox}
                >
                  ← Back to Inbox
                </button>
                <h2>{selectedEmail.subject}</h2>
                <div className="email-view-actions">
                  <button>↩️ Reply</button>
                  <button>➡️ Forward</button>
                </div>
              </div>
              <div className="email-view-content">
                <div className="email-sender-info">
                  <span>From: {selectedEmail.sender}</span>
                  <span>To: Me</span>
                  <span>{selectedEmail.time}</span>
                </div>
                <div 
                  className="email-body" 
                  dangerouslySetInnerHTML={{ __html: selectedEmail.body }}
                />
              </div>
            </div>
          )}
        </div>
      </div>
    );
  }
  
  export default GmailClone;


  body, html {
    margin: 0;
    padding: 0;
    height: 100%;
    font-family: 'Google Sans', Roboto, Arial, sans-serif;
  }
  
  .gmail-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
  }
  
  /* Header Styles */
  .gmail-header {
    display: flex;
    align-items: center;
    height: 64px;
    padding: 0 20px;
    border-bottom: 1px solid #e0e0e0;
  }
  
  .header-left {
    display: flex;
    align-items: center;
    width: 250px;
  }
  
  .menu-icon {
    background: none;
    border: none;
    margin-right: 15px;
    cursor: pointer;
  }
  
  .gmail-logo {
    height: 40px;
  }
  
  .header-search {
    flex-grow: 1;
    margin: 0 20px;
  }
  
  .search-input {
    width: 100%;
    padding: 10px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
  }
  
  .header-right button {
    background: none;
    border: none;
    margin-left: 15px;
    cursor: pointer;
  }
  
  /* Main Content Area */
  .gmail-main {
    display: flex;
    flex-grow: 1;
  }
  
  /* Sliding Sidebar Styles */
  .sliding-sidebar {
    width: 250px;
    overflow: hidden;
    transition: width 0.3s ease;
    border-right: 1px solid #e0e0e0;
    background-color: white;
    position: relative;
  }
  
  .sliding-sidebar:not(.open) {
    width: 50px;
  }
  
  .sidebar-header {
    display: flex;
    justify-content: flex-end;
    padding: 10px;
  }
  
  .sidebar-close-btn {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1.2em;
  }
  
  .sliding-sidebar .compose-btn {
    width: 90%;
    margin: 15px auto;
    padding: 10px;
    background-color: #c2e7ff;
    border: none;
    border-radius: 20px;
    white-space: nowrap;
    overflow: hidden;
  }
  
  .sliding-sidebar:not(.open) .compose-btn {
    width: 40px;
    padding: 10px;
  }
  
  .sidebar-item {
    display: flex;
    align-items: center;
    padding: 10px;
    cursor: pointer;
    position: relative;
    white-space: nowrap;
  }
  
  .sliding-sidebar:not(.open) .sidebar-item {
    justify-content: center;
  }
  
  .sliding-sidebar:not(.open) .folder-name,
  .sliding-sidebar:not(.open) .inbox-count {
    display: none;
  }
  
  .sidebar-item:hover {
    background-color: #f5f5f5;
  }
  
  .folder-icon {
    margin-right: 10px;
  }
  
  .inbox-count {
    position: absolute;
    right: 10px;
    background-color: #1a73e8;
    color: white;
    border-radius: 50%;
    padding: 2px 6px;
    font-size: 0.7em;
  }
  
  /* Email List Styles */
  .email-list {
    width: 350px;
    border-right: 1px solid #e0e0e0;
    transition: width 0.3s ease;
  }
  
  .email-list.expanded {
    width: calc(100% - 50px);
  }
  
  /* Rest of the CSS remains the same as in the previous version */


  